// –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–µ–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    loadAppointments();
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã –∫–∞–∫ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π
    const today = new Date().toISOString().split('T')[0];
    document.getElementById('date').min = today;
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤ (9:00 - 21:00)
    document.getElementById('time').min = '09:00';
    document.getElementById('time').max = '21:00';
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –∑–∞–ø–∏—Å–∏
document.getElementById('bookingForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    const phone = document.getElementById('phone').value;
    if (!isValidPhone(phone)) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
        return;
    }
    
    const formData = {
        id: Date.now(), // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏
        name: document.getElementById('name').value.trim(),
        phone: document.getElementById('phone').value.trim(),
        email: document.getElementById('email').value.trim(),
        service: document.getElementById('service').value,
        date: document.getElementById('date').value,
        time: document.getElementById('time').value,
        notes: document.getElementById('notes').value.trim(),
        createdAt: new Date().toLocaleString('ru-RU')
    };
    
    saveAppointment(formData);
    this.reset();
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification('–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!', 'success');
});

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
function isValidPhone(phone) {
    const phoneRegex = /^[\+]?[78][-\s]?\(?\d{3}\)?[-\s]?\d{3}[-\s]?\d{2}[-\s]?\d{2}$/;
    return phoneRegex.test(phone.replace(/\s/g, ''));
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ localStorage
function saveAppointment(appointment) {
    let appointments = JSON.parse(localStorage.getItem('manicureAppointments')) || [];
    appointments.push(appointment);
    localStorage.setItem('manicureAppointments', JSON.stringify(appointments));
    loadAppointments();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π
function loadAppointments() {
    const appointments = JSON.parse(localStorage.getItem('manicureAppointments')) || [];
    const appointmentsList = document.getElementById('appointmentsList');
    
    if (appointments.length === 0) {
        appointmentsList.innerHTML = `
            <div style="text-align: center; padding: 2rem; color: #666;">
                <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π</p>
                <p style="font-size: 0.9rem; margin-top: 0.5rem;">–ó–∞–ø–∏—Å–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã</p>
            </div>
        `;
        return;
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–ø–∏—Å–∏ –ø–æ –¥–∞—Ç–µ (—Å–Ω–∞—á–∞–ª–∞ –±–ª–∏–∂–∞–π—à–∏–µ)
    appointments.sort((a, b) => new Date(a.date + 'T' + a.time) - new Date(b.date + 'T' + b.time));
    
    appointmentsList.innerHTML = appointments.map((appointment) => `
        <div class="appointment-item">
            <h3>${getServiceName(appointment.service)}</h3>
            <p><strong>üë§ –ò–º—è:</strong> ${appointment.name}</p>
            <p><strong>üìû –¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${appointment.phone}</p>
            ${appointment.email ? `<p><strong>üìß Email:</strong> ${appointment.email}</p>` : ''}
            <p><strong>üìÖ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:</strong> ${formatDate(appointment.date)} –≤ ${appointment.time}</p>
            ${appointment.notes ? `<p><strong>üí≠ –ü—Ä–∏–º–µ—á–∞–Ω–∏—è:</strong> ${appointment.notes}</p>` : ''}
            <p style="font-size: 0.8rem; color: #888; margin-top: 0.5rem;">
                –ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞: ${appointment.createdAt}
            </p>
            <button class="delete-btn" onclick="deleteAppointment(${appointment.id})">
                ‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å
            </button>
        </div>
    `).join('');
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
function deleteAppointment(id) {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å?')) {
        let appointments = JSON.parse(localStorage.getItem('manicureAppointments')) || [];
        appointments = appointments.filter(appointment => appointment.id !== id);
        localStorage.setItem('manicureAppointments', JSON.stringify(appointments));
        loadAppointments();
        showNotification('–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞', 'info');
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(message, type = 'success') {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${type === 'success' ? '#4CAF50' : '#2196F3'};
        color: white;
        padding: 15px 20px;
        border-radius: 5px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        z-index: 1000;
        animation: slideIn 0.3s ease;
    `;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.remove();
    }, 3000);
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getServiceName(serviceCode) {
    const services = {
        'classic': 'üíÖ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞–Ω–∏–∫—é—Ä - 1500 —Ä—É–±.',
        'apparatus': 'üîß –ê–ø–ø–∞—Ä–∞—Ç–Ω—ã–π –º–∞–Ω–∏–∫—é—Ä - 2000 —Ä—É–±.',
        'gel': 'üíé –ü–æ–∫—Ä—ã—Ç–∏–µ –≥–µ–ª—å-–ª–∞–∫ - 1200 —Ä—É–±.',
        'design': 'üé® –î–∏–∑–∞–π–Ω –Ω–æ–≥—Ç–µ–π - –æ—Ç 500 —Ä—É–±.'
    };
    return services[serviceCode] || '–£—Å–ª—É–≥–∞';
}

function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
}

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const style = document.createElement('style');
style.textContent = `
    @keyframes slideIn {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
`;
document.head.appendChild(style);